name: CD
on:
  push:
    branches: ['main']

permissions:
  contents: read
  packages: write          # GHCR push 권한

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
    #####################################################################
    # 0) checkout + buildx
    #####################################################################
    - uses: actions/checkout@v4
    - uses: docker/setup-buildx-action@v3

    #####################################################################
    # 1) 태그를 소문자로 생성
    #####################################################################
    - name: Prepare image tag
      id: prep
      run: |
        echo "image_tag=ghcr.io/${GITHUB_REPOSITORY,,}:latest" >> "$GITHUB_OUTPUT"

    #####################################################################
    # 2) GHCR 로그인 + 이미지 Build & Push
    #####################################################################
    - name: Log in to ghcr.io
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build & push frontend image
      uses: docker/build-push-action@v5
      with:
        context: ./mjsec-frontend
        file:    ./mjsec-frontend/Dockerfile
        push:    true
        tags:    ${{ steps.prep.outputs.image_tag }}

    #####################################################################
    # 3) 서버 배포 (SSH)
    #####################################################################
    - name: Deploy via SSH
      uses: appleboy/ssh-action@v0.1.7
      with:
        host:       ${{ secrets.HOST }}
        port:       ${{ secrets.SSH_PORT }}
        username:   ${{ secrets.USER }}
        key:        ${{ secrets.SSH_KEY }}

        script: |
          set -e

          ###############################################################
          # ① 코드 디렉터리 준비 / 최초 clone
          ###############################################################
          if [ ! -d /srv/mjsec/.git ]; then
            mkdir -p /srv/mjsec
            git clone --branch main https://github.com/${{ github.repository }} /srv/mjsec
          fi
          cd /srv/mjsec
          git fetch origin main
          git reset --hard origin/main

          ###############################################################
          # ② .env 파일 생성 후 export  (Compose 에 변수 전달)
          ###############################################################
          cat > .env <<'EOF'
          ORG=${{ vars.ORG }}
          REPO=${{ vars.REPO }}
          DOMAIN=${{ vars.DOMAIN }}
          EMAIL=${{ vars.EMAIL }}
          EOF
          echo "------ .env ------"; cat .env; echo "-------------------"
          set -o allexport; source .env; set +o allexport   # <─ export!

          ###############################################################
          # ③ GHCR 로그인 (서버측 Pull 용)
          ###############################################################
          if [ -n "${{ secrets.GHCR_PAT }}" ]; then
            echo "${{ secrets.GHCR_PAT }}" | \
              docker login ghcr.io -u ${{ github.actor }} --password-stdin
          fi

          ###############################################################
          # ④ HTTP‑only Nginx 기동 (80포트 개방)
          ###############################################################
          docker compose --env-file .env \
            -f mjsec-frontend/docker-compose.prod.yaml up -d nginx

          ###############################################################
          # ⑤ 최초 SSL 발급 (존재하면 건너뜀)
          ###############################################################
          if [ ! -f "./certbot-etc/live/${DOMAIN}/fullchain.pem" ]; then
            chmod +x ./mjsec-frontend/docker/scripts/init-letsencrypt.sh
            ./mjsec-frontend/docker/scripts/init-letsencrypt.sh || {
              echo "⚠️  SSL bootstrap failed"; exit 1; }
          else
            echo "SSL cert already present – skip bootstrap"
          fi

          ###############################################################
          # ⑥ 전체 스택 재기동 (nginx + app + renew loop)
          ###############################################################
          docker compose --env-file .env \
            -f mjsec-frontend/docker-compose.prod.yaml pull
          docker compose --env-file .env \
            -f mjsec-frontend/docker-compose.prod.yaml up -d --remove-orphans

          ###############################################################
          # ⑦ 불필요 이미지 정리
          ###############################################################
          docker image prune -f
