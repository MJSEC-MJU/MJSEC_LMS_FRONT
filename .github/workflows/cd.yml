name: CD

on:
  push:
    branches: ["main"]

permissions:
  contents: read
  packages: write       # GHCR push 권한

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3

      #───────────────────────────────────────────────────────────────#
      # 0)  태그를 모두 소문자로                                        #
      #───────────────────────────────────────────────────────────────#
      - name: Prepare image tag
        id: prep
        run: |
          echo "image_tag=ghcr.io/${GITHUB_REPOSITORY,,}:latest" >> $GITHUB_OUTPUT

      #───────────────────────────────────────────────────────────────#
      # 1)  GHCR 로그인 + 이미지 Build & Push                         #
      #───────────────────────────────────────────────────────────────#
      - name: Log in to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./mjsec-frontend
          file:    ./mjsec-frontend/Dockerfile
          push:    true
          tags:    ${{ steps.prep.outputs.image_tag }}

      #───────────────────────────────────────────────────────────────#
      # 2)  서버 배포 (SSH)                                            #
      #───────────────────────────────────────────────────────────────#
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v0.1.7
        with:
          host:       ${{ secrets.HOST }}
          port:       ${{ secrets.SSH_PORT }}
          username:   ${{ secrets.USER }}
          key:        ${{ secrets.SSH_KEY }}

          script: |
            set -e

            echo "① 코드 디렉터리 준비 / 최초 clone"
            if [ ! -d /srv/mjsec/.git ]; then
              sudo mkdir -p /srv/mjsec
              sudo chown $(whoami):$(whoami) /srv/mjsec
              git clone --branch main https://github.com/${{ github.repository }} /srv/mjsec
            fi

            cd /srv/mjsec
            git fetch origin main
            git reset --hard origin/main

            echo "② .env 파일(서버용) 생성/갱신"
            cat > .env <<'EOF'
            ORG=${{ vars.ORG }}
            REPO=${{ vars.REPO }}
            DOMAIN=${{ vars.DOMAIN }}
            EMAIL=${{ vars.EMAIL }}
            EOF
            echo "   - .env 내용:"
            cat .env

            echo "③ GHCR 로그인"
            echo "${{ secrets.GHCR_PAT }}" | \
              docker login ghcr.io -u ${{ github.actor }} --password-stdin

            echo "④ 최초 SSL 발급 (없을 때만)"
            if [ ! -f "./certbot-etc/live/${{ vars.DOMAIN }}/fullchain.pem" ]; then
              ./mjsec-frontend/docker/scripts/init-letsencrypt.sh
            fi

            echo "⑤ 이미지 Pull & Compose 재기동"
            docker compose -f mjsec-frontend/docker-compose.prod.yaml pull
            docker compose -f mjsec-frontend/docker-compose.prod.yaml up -d --remove-orphans

            echo "⑥ 불필요 이미지 정리"
            docker image prune -f

